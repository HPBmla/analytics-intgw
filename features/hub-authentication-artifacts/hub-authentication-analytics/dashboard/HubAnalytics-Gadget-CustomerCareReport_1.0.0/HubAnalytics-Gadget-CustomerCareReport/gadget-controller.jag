<%
/**
 *  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */
(function () {

    response.contentType = 'application/json';
    var PROVIDER_CONF = 'provider-conf';
    var PROVIDER_NAME = 'provider-name';

    var action = request.getParameter("action");
    var filter = request.getParameter("filter");
    var data = request.getContent();
    var providerConf = data[PROVIDER_CONF];
    var department = "";
    var role = "";
    var serviceProvider = "";

    var log = new Log();
    var providerAPI = require('js/core/' + providerConf[PROVIDER_NAME] + '-provider-api.js');

    if (action === 'getSchema') {
        print(providerAPI.getSchema(providerConf));
        return;
    } else if(action === 'getData'){

        //Check logged in user role and decide which operators to load
        var all = true;
        var currentOperator;
        var user = session.get('user');

        var carbon = require('carbon');
        var userRealmService = carbon.server.osgiService('org.wso2.carbon.user.api.UserRealmService');
        var tenantId = userRealmService.getTenantManager().getTenantId(user.domain);
        var userRealm = userRealmService.getTenantUserRealm(tenantId);
        var userStore = userRealm.getUserStoreManager();
        var claim = userStore.getUserClaimValue(user.username, 'http://wso2.org/claims/identity/department', null);

        for (var i =0; i < user.roles.length; i++) {
             if (user.roles[i] == "admin" || user.roles[i] == "internal-gateway-admin") {
                   role = "admin";
                   break;
             } else if(user.roles[i] == "business-unit-viewer"){
                   department = claim;
                   role = "viewer";
                   break;
             } else if(user.roles[i] == "business-unit-publisher"){
                   role = "publisher";
             } else if(user.roles[i] == "Internal/subscriber"){
                   role = "serviceProvider";
                   serviceProvider = user.username+"@"+user.domain;
             }
         }

        if (providerConf[PROVIDER_NAME] == "batch") {

                 providerConf.query += "responseTime:["+data.dateStart+" TO "+data.dateEnd+"]";
                    if (data.operator != "-1" && data.operator != undefined) {
                        providerConf.query +=  " AND operatorId:"+ data.operator;
                    }
                    if (data.serviceProvider != "-1" && data.serviceProvider != undefined) {
                        providerConf.query +=  " AND serviceProviderId:"+ "\""+ data.serviceProvider+ "\"";
                    }
                    if (data.msisdn.toLowerCase().trim() != "") {
                        providerConf.query +=  " AND msisdn:"+ data.msisdn;
                    }
                    if (data.applicationName != "-1" && data.applicationName != undefined) {
                        providerConf.query +=  " AND applicationId:"+ data.applicationName;
                    }
        } else if (providerConf[PROVIDER_NAME] == "operator") {
                  if (data.operator != "-1" && data.operator != "(-1)" && data.operator != undefined) {
                              providerConf.query +=  "operatorId:"+ data.operator;
                              all = false;
                  }
        }else if(providerConf[PROVIDER_NAME] == "sp") {
                  if(data.serviceProvider != "-1" && data.serviceProvider != "(-1)" && data.operator != undefined){
                            providerConf.query +=  "serviceProviderId:"+ data.serviceProvider;
                            all = false;
                  }
        }else if(providerConf[PROVIDER_NAME] == "app") {
                  if(data.applicationId!="-1" && data.applicationId!="(-1)" && data.operator != undefined){
                        providerConf.query +=  "applicationId:"+ data.applicationId;
                        all = false;
                  }
        }
        if(role =="viewer" && all == false){
                 providerConf.query +=  ' AND department:"'+department+'"';
        }else if(role =="viewer" && all == true){
                providerConf.query +=  ' department:"'+department+'"';
        }else if(role =="serviceProvider"){
                providerConf.query +=  ' serviceProvider:"'+serviceProvider+'"';
        }
      //  log.info(providerConf[PROVIDER_NAME]+"----------- data =>"+stringify(data));
     //   log.info(providerConf[PROVIDER_NAME]+"----------- providerConf =>"+stringify(providerConf));
        print(providerAPI.getData(providerConf));
        return;
    }

}());


%>
